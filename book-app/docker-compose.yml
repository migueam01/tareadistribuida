version: '3'

services:
  app-books:
    image: jaimesalvador/app-book:v1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-book.rule=PathPrefix(`/api/book`)"
      - "traefik.http.routers.app-book.entrypoints=web"
    depends_on:
      - db
    environment:
      - DB_URL=jdbc:postgresql://db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
#    ports:
#      - "8080"
    expose:
      - 8080

  app-authors:
    image: jaimesalvador/app-author:v1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.app-author.rule=PathPrefix(`/api/author`)"
      - "traefik.http.routers.app-author.entrypoints=web"
    depends_on:
      - db
    environment:
      - DB_URL=jdbc:postgresql://db:5432/postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
#    ports:
#      - "8081"
    expose:
      - 8081

  app-web:
    image: jaimesalvador/app-web:v1
    depends_on:
      - traefik
    ports:
      - ":8888:8089"

  db:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=postgres
#    volumes:
#      - slva:/var/lib/postgresql/data
    ports:
      - "5433:5432"

  traefik:
    image: "traefik:v2.9"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80" # entrypoint on docker e.g: 8888
    ports:
      - "9090:80" # localhost : entrypoint on docker e.g:  4545:8888
      - "6099:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#volumes:
#  slva: